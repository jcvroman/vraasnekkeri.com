# Continuous Delivery (CD):
#   Bump version and tag.
name: cd-version-tag

# Controls when the workflow will run.
on:
  push:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab.
  workflow_dispatch:
    inputs:
      version:
        description: 'Tag version (e.g. v0.1.0)'
        required: true
      message:
        description: 'Tag message (e.g. ci: Tag version as v0.1.0)'
        required: true

jobs:
  # Update changelog.
  update-changelog:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Create changelog text
        id: changelog
        uses: loopwerk/tag-changelog@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          # exclude_types: other,perf

      - name: Read CHANGELOG.md
        id: package
        uses: juliangruber/read-file-action@v1
        with:
          path: ./CHANGELOG.md

      # Overwrite as writing latest changelog than re-writing the existing file (i.e. the old changelogs).
      - name: Write to CHANGELOG.md
        uses: DamianReeves/write-file-action@master
        with:
          path: ./CHANGELOG.md
          contents: ${{ steps.changelog.outputs.changelog }}${{ steps.package.outputs.content }}
          write-mode: overwrite

      - name: Commit and push CHANGELOG.md
        uses: EndBug/add-and-commit@v7
        with:
          add: CHANGELOG.md
          message: "chore: Update CHANGELOG.md"
          # branch: main

  # Calc git version.
  calc-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.gitversion.outputs.majorMinorPatch }}
      commitsSinceVersionSource: ${{ steps.gitversion.outputs.commitsSinceVersionSource }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Use gitversion to determine next version.
      # NOTE: Configuration File: GitVersion.yml
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.9
        with:
          versionSpec: 'x.x.x'

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.9

  # Create tag for version.
  create-tag:
    runs-on: ubuntu-latest
    needs: calc-version

    steps:
      # Checks out your repository under $GITHUB_WORKSPACE.
      - name: Checkout
        uses: actions/checkout@v3

      - name: Display incoming need outputs
        run: |
          echo "version: ${{ needs.calc-version.outputs.version }}"
          echo "commitsSinceVersionSource: ${{ needs.calc-version.outputs.commitsSinceVersionSource }}"

      - name: Create Tag
        uses: negz/create-tag@v1
        with:
          version: "v${{ needs.calc-version.outputs.version }}"
          message: "ci: Tag version as v${{ needs.calc-version.outputs.version }}"
          token: ${{ secrets.GITHUB_TOKEN }}            # This token is provided by Actions.
