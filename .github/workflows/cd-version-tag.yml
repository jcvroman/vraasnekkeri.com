# Continuous Delivery (CD):
#   Bump version and tag.
name: cd-version-tag

# Controls when the workflow will run.
on:
  push:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab.
  workflow_dispatch:
    inputs:
      version-override:
        description: 'Version (e.g. 1.2.4)'
        required: true

jobs:
  # Calc git version.
  calc-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.gitversion.outputs.majorMinorPatch }}
      commitsSinceVersionSource: ${{ steps.gitversion.outputs.commitsSinceVersionSource }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Use gitversion to determine next version.
      # NOTE: Configuration File: GitVersion.yml
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.9
        with:
          versionSpec: 'x.x.x'

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.9

  # Create tag for version.
  create-tag:
    runs-on: ubuntu-latest
    needs: calc-version

    steps:
      # Checks out your repository under $GITHUB_WORKSPACE.
      - name: Checkout
        uses: actions/checkout@v3

      - name: Display incoming need outputs and inputs
        run: |
          echo "version: ${{ needs.calc-version.outputs.version }}"
          echo "commitsSinceVersionSource: ${{ needs.calc-version.outputs.commitsSinceVersionSource }}"
          echo "version-override: ${{ github.event.inputs.version-override }}"

      - name: Create Tag by calc-version
        if: github.event.inputs.version-override == ''      # Only run this step, if inputs value not set.
        uses: negz/create-tag@v1
        with:
          version: "v${{ needs.calc-version.outputs.version }}"
          message: "ci: Tag version as v${{ needs.calc-version.outputs.version }}"
          token: ${{ secrets.GITHUB_TOKEN }}                # This token is provided by Actions.

      - name: Create Tag by inputs version-override
        if: github.event.inputs.version-override != ''      # Only run this step, if inputs value set.
        uses: negz/create-tag@v1
        with:
          version: "v${{ github.event.inputs.version-override }}"
          message: "ci: Tag version as v${{ github.event.inputs.version-override }}"
          token: ${{ secrets.GITHUB_TOKEN }}

  # Update changelog.
  # NOTE: This updated changelog is not included in the above tag. But, it has the latest.
  update-changelog:
    runs-on: ubuntu-latest
    needs: create-tag

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Create changelog text
        id: changelog
        uses: loopwerk/tag-changelog@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config_file: .github/tag-changelog-config.js

      - name: Read CHANGELOG.md
        id: package
        uses: juliangruber/read-file-action@v1
        with:
          path: ./CHANGELOG.md

      # Overwrite as writing latest changelog than re-writing the existing file (i.e. the old changelogs).
      - name: Write to CHANGELOG.md
        uses: DamianReeves/write-file-action@master
        with:
          path: ./CHANGELOG.md
          contents: ${{ steps.changelog.outputs.changelog }}${{ steps.package.outputs.content }}
          write-mode: overwrite

      - name: Commit and push CHANGELOG.md
        uses: test-room-7/action-update-file@v1
        with:
          file-path: CHANGELOG.md
          commit-msg: "chore: Update CHANGELOG.md"
          github-token: ${{ secrets.GITHUB_TOKEN }}



  # Update releasenotes.
  # NOTE: This updated releasenotes is not included in the above tag. But, it has the latest.
  update-releasenotes:
    runs-on: ubuntu-latest
    needs: create-tag

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Excluding non user types from the release notes.
      # NOTE: For now, just manually edit release notes file as commits occur for this release.
      - name: Create releasenotes text
        id: releasenotes
        uses: loopwerk/tag-changelog@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config_file: .github/tag-changelog-releasenotes-config.js

      - name: Read RELEASE_NOTES.md
        id: package
        uses: juliangruber/read-file-action@v1
        with:
          path: ./RELEASE_NOTES.md

      # Overwrite as writing latest releasenotes than re-writing the existing file (i.e. the old releasenotes).
      - name: Write to RELEASE_NOTES.md
        uses: DamianReeves/write-file-action@master
        with:
          path: ./RELEASE_NOTES.md
          contents: ${{ steps.releasenotes.outputs.changelog }}${{ steps.package.outputs.content }}
          write-mode: overwrite

      - name: Commit and push CHANGELOG.md
        uses: test-room-7/action-update-file@v1
        with:
          file-path: RELEASE_NOTES.md
          commit-msg: "chore: Update RELEASE_NOTES.md"
          github-token: ${{ secrets.GITHUB_TOKEN }}
